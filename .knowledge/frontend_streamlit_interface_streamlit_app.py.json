{"is_source_file": true, "format": "Python", "description": "This file defines a Streamlit-based web interface for interacting with a backend API, including functions for discovering API endpoints, submitting queries, fetching agents and history, and applying a custom Ocean theme. It also contains the main function to run the app, with UI components for agent selection, query input, and displaying responses.", "external_files": ["os", "json", "time", "requests", "streamlit"], "external_methods": ["os.getenv", "os.path", "json.loads", "requests.get", "requests.post", "requests.Response.raise_for_status", "st.set_page_config", "st.markdown", "st.expander", "st.json", "st.sidebar", "st.toast", "st.write", "st.error", "st.success", "st.info", "st.caption", "st.form", "st.columns", "st.text_area", "st.markdown", "st.spinner", "st.session_state", "st.button", "st.selectbox", "st,write"], "published": ["discover_api", "fetch_agents", "submit_query", "fetch_history", "main"], "classes": [], "methods": [{"name": "str get_backend_base_url()", "description": "Retrieves the backend base URL from environment variables or defaults to http://localhost:8000.", "scope": "", "scopeKind": ""}, {"name": "requests.Response _http_get(path: str, timeout: int = 20)", "description": "Performs an HTTP GET request to the specified backend endpoint.", "scope": "", "scopeKind": ""}, {"name": "requests.Response _http_post(path: str, json_body: dict, timeout: int = 60)", "description": "Performs an HTTP POST request with JSON body to the specified backend endpoint.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] discover_api()", "description": "Fetches the OpenAPI specification from the backend.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] fetch_agents(api: Dict[str, Any])", "description": "Attempts to retrieve a list of agents from the backend API.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] submit_query(agent_id: Optional[str], query: str)", "description": "Submits a user query to the backend API, trying multiple endpoints.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] fetch_history(agent_id: Optional[str] = None)", "description": "Retrieves interaction history from the backend API.", "scope": "", "scopeKind": ""}, {"name": "_apply_ocean_theme()", "description": "Applies a custom Ocean Professional theme to the Streamlit app.", "scope": "", "scopeKind": ""}, {"name": "_init_session_state()", "description": "Initializes session state variables for the application.", "scope": "", "scopeKind": ""}, {"name": "_sidebar_ui()", "description": "Creates the sidebar UI elements for agent selection and controls.", "scope": "", "scopeKind": ""}, {"name": "_main_panel()", "description": "Creates the main panel UI for submitting queries and displaying responses.", "scope": "", "scopeKind": ""}, {"name": "_render_response(resp: Any)", "description": "Renders the backend response content heuristically.", "scope": "", "scopeKind": ""}, {"name": "_footer()", "description": "Displays footer information.", "scope": "", "scopeKind": ""}, {"name": "main()", "description": "Main entry point that sets up and runs the Streamlit app.", "scope": "", "scopeKind": ""}], "search-terms": ["streamlit_app", "Ocean Professional theme", "Bedrock-Agent-Query", "API discovery", "agent fetching", "query submission", "history retrieval", "UI", "backend API"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "_apply_ocean_theme", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _apply_ocean_theme():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_footer", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _footer():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_http_get", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _http_get(path: str, timeout: int = 20) -> requests.Response:$/", "language": "Python", "typeref": "typename:requests.Response", "kind": "function", "signature": "(path: str, timeout: int = 20)"}, {"_type": "tag", "name": "_http_post", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _http_post(path: str, json_body: dict, timeout: int = 60) -> requests.Response:$/", "language": "Python", "typeref": "typename:requests.Response", "kind": "function", "signature": "(path: str, json_body: dict, timeout: int = 60)"}, {"_type": "tag", "name": "_init_session_state", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _init_session_state():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_main_panel", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _main_panel():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_render_response", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _render_response(resp: Any):$/", "language": "Python", "kind": "function", "signature": "(resp: Any)"}, {"_type": "tag", "name": "_sidebar_ui", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _sidebar_ui():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "discover_api", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def discover_api() -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "fetch_agents", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def fetch_agents(api: Dict[str, Any]) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(api: Dict[str, Any])"}, {"_type": "tag", "name": "fetch_history", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def fetch_history(agent_id: Optional[str] = None) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(agent_id: Optional[str] = None)"}, {"_type": "tag", "name": "get_backend_base_url", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def get_backend_base_url() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def main():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "st", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^import streamlit as st$/", "language": "Python", "kind": "namespace", "nameref": "module:streamlit"}, {"_type": "tag", "name": "submit_query", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def submit_query(agent_id: Optional[str], query: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(agent_id: Optional[str], query: str)"}], "hash": "240ab0386ff0cbd314569c3615ab8416", "format-version": 4, "code-base-name": "frontend_streamlit_interface", "filename": "frontend_streamlit_interface/streamlit_app.py", "revision_history": [{"27": ""}]}