{"is_source_file": true, "format": "Python", "description": "This is a Streamlit-based frontend Python script for querying AI agents via a REST API. It includes functions to discover API endpoints, fetch agent lists, submit queries, retrieve history, and apply custom styling. It also contains UI logic for displaying interaction history, agent selection, and responses.", "external_files": ["os", "json", "time", "requests", "streamlit"], "external_methods": ["requests.get", "requests.post", "st.set_page_config", "st.markdown", "st.sidebar", "st.json", "st.error", "st.success", "st.warning", "st.info", "st.caption", "st.write", "st.expander", "st.text_area", "st.selectbox", "st.button", "st.spinner"], "published": ["discover_api", "fetch_agents", "submit_query", "fetch_history"], "classes": [], "methods": [{"name": "str get_backend_base_url()", "description": "Retrieves the backend base URL from environment variables or default.", "scope": "", "scopeKind": ""}, {"name": "requests.Response _http_get(path: str, timeout: int = 20)", "description": "Performs an HTTP GET request to a constructed URL with a specified timeout.", "scope": "", "scopeKind": ""}, {"name": "requests.Response _http_post(path: str, json_body: dict, timeout: int = 60)", "description": "Performs an HTTP POST request with JSON payload to a constructed URL with a specified timeout.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] discover_api()", "description": "Fetches the OpenAPI specification from the backend to discover available endpoints.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] fetch_agents(api: Dict[str, Any])", "description": "Retrieves a list of available agents via openapi or fallback endpoints.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] submit_query(agent_id: Optional[str], query: str)", "description": "Submits a user query to the backend, trying multiple endpoints.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] fetch_history(agent_id: Optional[str] = None)", "description": "Retrieves interaction history for an agent or overall.", "scope": "", "scopeKind": ""}, {"name": "_apply_ocean_theme()", "description": "Applies custom Ocean Professional theme to the Streamlit UI.", "scope": "", "scopeKind": ""}, {"name": "_init_session_state()", "description": "Initializes session state variables for Streamlit app.", "scope": "", "scopeKind": ""}, {"name": "_sidebar_ui()", "description": "Builds the sidebar UI for agent selection, API discovery, and history controls.", "scope": "", "scopeKind": ""}, {"name": "_main_panel()", "description": "Builds the main query input and response display panel.", "scope": "", "scopeKind": ""}, {"name": "_render_response(resp: Any)", "description": "Heuristically renders backend responses, supporting nested and structured data.", "scope": "", "scopeKind": ""}, {"name": "_footer()", "description": "Adds footer information and styling notes.", "scope": "", "scopeKind": ""}, {"name": "main()", "description": "Main entry point, orchestrates the UI setup and interaction flow.", "scope": "", "scopeKind": ""}], "calls": ["discover_api", "fetch_agents", "submit_query", "fetch_history", "st.set_page_config", "st.markdown", "st.sidebar", "st.json", "st.error", "st.success", "st.warning", "st.info", "st.caption", "st.write", "st.expander", "st.text_area", "st.selectbox", "st.button", "st.spinner"], "search-terms": ["Streamlit", "API discovery", "agent list", "query submission", "history retrieval", "Ocean theme", "frontend interface", "Bedrock API", "social base URL", "UI customization"], "state": 2, "file_id": 13, "knowledge_revision": 34, "git_revision": "5eaee6b69066809d0b0a83ca6f9e6bfb5aad479d", "revision_history": [{"27": ""}, {"33": "5eaee6b69066809d0b0a83ca6f9e6bfb5aad479d"}, {"34": "5eaee6b69066809d0b0a83ca6f9e6bfb5aad479d"}], "ctags": [{"_type": "tag", "name": "_apply_ocean_theme", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _apply_ocean_theme():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_footer", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _footer():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_http_get", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _http_get(path: str, timeout: int = 20) -> requests.Response:$/", "language": "Python", "typeref": "typename:requests.Response", "kind": "function", "signature": "(path: str, timeout: int = 20)"}, {"_type": "tag", "name": "_http_post", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _http_post(path: str, json_body: dict, timeout: int = 60) -> requests.Response:$/", "language": "Python", "typeref": "typename:requests.Response", "kind": "function", "signature": "(path: str, json_body: dict, timeout: int = 60)"}, {"_type": "tag", "name": "_init_session_state", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _init_session_state():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_main_panel", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _main_panel():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_render_response", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _render_response(resp: Any):$/", "language": "Python", "kind": "function", "signature": "(resp: Any)"}, {"_type": "tag", "name": "_sidebar_ui", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _sidebar_ui():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "discover_api", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def discover_api() -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "fetch_agents", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def fetch_agents(api: Dict[str, Any]) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(api: Dict[str, Any])"}, {"_type": "tag", "name": "fetch_history", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def fetch_history(agent_id: Optional[str] = None) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(agent_id: Optional[str] = None)"}, {"_type": "tag", "name": "get_backend_base_url", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def get_backend_base_url() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def main():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "st", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^import streamlit as st$/", "language": "Python", "kind": "namespace", "nameref": "module:streamlit"}, {"_type": "tag", "name": "submit_query", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def submit_query(agent_id: Optional[str], query: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(agent_id: Optional[str], query: str)"}], "hash": "f43b9c00f94e0b9303be4fb92e55effa", "format-version": 4, "code-base-name": "frontend_streamlit_interface", "filename": "frontend_streamlit_interface/streamlit_app.py"}