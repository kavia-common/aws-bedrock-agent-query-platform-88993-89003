{"is_source_file": true, "format": "Python", "description": "This file is a Python script implementing a Streamlit-based frontend interface for interacting with a backend API. It includes functions for discovering API endpoints, fetching agents, submitting queries, and displaying interaction history, all with Ocean Professional styling.", "external_files": ["requests", "streamlit"], "external_methods": ["requests.get", "requests.post", "requests.Response.raise_for_status", "streamlit.set_page_config", "streamlit.markdown", "streamlit.json", "streamlit.sidebar", "streamlit.text_area", "streamlit.selectbox", "streamlit.button", "streamlit.spinner", "streamlit.error", "streamlit.success", "streamlit.write", "streamlit.expander", "streamlit.caption", "streamlit.set_page_config"], "published": ["get_backend_base_url", "discover_api", "fetch_agents", "submit_query", "fetch_history"], "classes": [], "methods": [{"name": "str get_backend_base_url()", "description": "Retrieves the backend base URL from environment variables or defaults to localhost.", "scope": "", "scopeKind": ""}, {"name": "requests.Response _http_get(path: str, timeout: int = 20)", "description": "Performs an HTTP GET request to the given path with a specified timeout.", "scope": "", "scopeKind": ""}, {"name": "requests.Response _http_post(path: str, json_body: dict, timeout: int = 60)", "description": "Performs an HTTP POST request to the given path with JSON body and timeout.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] discover_api()", "description": "Fetches and returns the backend's OpenAPI specification JSON.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] fetch_agents(api: Dict[str, Any])", "description": "Detects and retrieves a list of available agents from the backend API.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] submit_query(agent_id: Optional[str], query: str)", "description": "Submits a user query to the backend API, trying multiple endpoint paths.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] fetch_history(agent_id: Optional[str] = None)", "description": "Retrieves interaction history, optionally scoped to an agent.", "scope": "", "scopeKind": ""}, {"name": "_apply_ocean_theme()", "description": "Applies Ocean Professional styling using Streamlit's markdown and CSS.", "scope": "", "scopeKind": ""}, {"name": "_init_session_state()", "description": "Initializes session state variables for selected agent, history, API data, and agents.", "scope": "", "scopeKind": ""}, {"name": "_sidebar_ui()", "description": "Constructs the sidebar UI for agent selection, refresh, and history loading.", "scope": "", "scopeKind": ""}, {"name": "_main_panel()", "description": "Constructs the main panel for submitting queries and displaying recent interactions.", "scope": "", "scopeKind": ""}, {"name": "_render_response(resp: Any)", "description": "Heuristically renders the backend response, handling various content types.", "scope": "", "scopeKind": ""}, {"name": "_footer()", "description": "Displays footer information and style.", "scope": "", "scopeKind": ""}, {"name": "main()", "description": "Main entry point that sets up themes, initializes state, and renders UI components.", "scope": "", "scopeKind": ""}], "calls": ["get_backend_base_url", "_http_get", "_http_post", "discover_api", "fetch_agents", "submit_query", "fetch_history", "_apply_ocean_theme", "_init_session_state", "_sidebar_ui", "_main_panel", "_render_response", "_footer"], "search-terms": ["Streamlit frontend", "API discovery", "agent selection", "query submission", "interaction history", "Ocean theme", "backend API interaction", "Bedrock Agent Query"], "state": 2, "file_id": 13, "knowledge_revision": 35, "git_revision": "a087140bdf61e6740b26c53e1196658a5d0480ef", "revision_history": [{"27": ""}, {"33": "5eaee6b69066809d0b0a83ca6f9e6bfb5aad479d"}, {"34": "5eaee6b69066809d0b0a83ca6f9e6bfb5aad479d"}, {"35": "a087140bdf61e6740b26c53e1196658a5d0480ef"}], "ctags": [{"_type": "tag", "name": "_apply_ocean_theme", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _apply_ocean_theme():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_footer", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _footer():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_http_get", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _http_get(path: str, timeout: int = 20) -> requests.Response:$/", "language": "Python", "typeref": "typename:requests.Response", "kind": "function", "signature": "(path: str, timeout: int = 20)"}, {"_type": "tag", "name": "_http_post", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _http_post(path: str, json_body: dict, timeout: int = 60) -> requests.Response:$/", "language": "Python", "typeref": "typename:requests.Response", "kind": "function", "signature": "(path: str, json_body: dict, timeout: int = 60)"}, {"_type": "tag", "name": "_init_session_state", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _init_session_state():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_main_panel", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _main_panel():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_render_response", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _render_response(resp: Any):$/", "language": "Python", "kind": "function", "signature": "(resp: Any)"}, {"_type": "tag", "name": "_sidebar_ui", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def _sidebar_ui():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "discover_api", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def discover_api() -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "fetch_agents", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def fetch_agents(api: Dict[str, Any]) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(api: Dict[str, Any])"}, {"_type": "tag", "name": "fetch_history", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def fetch_history(agent_id: Optional[str] = None) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(agent_id: Optional[str] = None)"}, {"_type": "tag", "name": "get_backend_base_url", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def get_backend_base_url() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def main():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "st", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^import streamlit as st$/", "language": "Python", "kind": "namespace", "nameref": "module:streamlit"}, {"_type": "tag", "name": "submit_query", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89003/frontend_streamlit_interface/streamlit_app.py", "pattern": "/^def submit_query(agent_id: Optional[str], query: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(agent_id: Optional[str], query: str)"}], "hash": "f43b9c00f94e0b9303be4fb92e55effa", "format-version": 4, "code-base-name": "frontend_streamlit_interface", "filename": "frontend_streamlit_interface/streamlit_app.py"}